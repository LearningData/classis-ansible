# MYSQL
- name: install mysql python module
  apt: name=python-mysqldb state=present

- name: ensure mysql is running and starts on boot
  service: name=mysql state=started enabled=true

- name: update mysql root password for all root accounts
  become: yes
  mysql_user:
    host: "{{ item }}"
    name: root
    password: "{{ db_pass }}"
    login_user: root
    login_password: "{{ db_pass }}"
    check_implicit_admin: yes
    priv: '*.*:ALL,GRANT'
  with_items:
    - "{{ ansible_hostname }}"
    - 127.0.0.1
    - ::1

- name: copy root my.cnf file
  template: dest=/root/.my.cnf src=production/files/database/root-mycnf owner=root group=root mode=0600

- name: restart mysql
  service: name=mysql state=restarted

- name: copy my.cnf file
  template: dest=/etc/mysql/my.cnf src=production/files/database/my.cnf-master

- name: ensure anonymous users are not in the database
  become: yes
  mysql_user:
    name: ''
    host: "{{ item }}"
    login_user: root
    login_password: "{{ db_pass }}"
    check_implicit_admin: yes
    state: absent
  with_items:
    - "{{ inventory_hostname }}"
    - 127.0.0.1
    - localhost

- name: create classis db
  become: yes
  mysql_db: name={{ db_name }} state=present collation=utf8_general_ci

- name: grant privileges class db user
  mysql_user: name={{ db_user }} password={{ db_pass }} priv=*.*:ALL state=present

- name: copy empty_database.sql to /tmp
  copy: dest=/tmp src=common/files/classis/database.sql

- name: import default database
  shell: mysql -f -p{{ db_pass }} -u {{ db_user }} {{ db_name }} < /tmp/database.sql

- name: update classis administrator password
  command: mysql -p{{ db_pass }} -u {{ db_user }} {{ db_name }} -e "UPDATE users SET passwd=md5('{{ classis_administrator_password }}') WHERE username='administrator';"

- name: generate fees password
  shell: date | md5sum | head -c${1:-10};echo;
  register: fees_pass

- name: generate fees pin
  shell: date | md5sum | head -c${1:-4};echo;
  register: fees_pin

- name: copy fees password
  set_fact:
    classis_fees_password: "fees_password: {{ fees_pass.stdout }}, fees_pin: {{ fees_pin.stdout }}"

- debug: msg="Your credentials for fees section in Classis are {{ classis_fees_password }}"

- name: save fees password in a file
  copy: dest=/home/{{user}}/classis_fees_passwords content={{ classis_fees_password }}

- name: update fees passwords
  command: mysql -p{{ db_pass }} -u {{ db_user }} {{ db_name }} -e "UPDATE fees_account SET bankname=AES_ENCRYPT('{{ fees_pass.stdout }}', '{{ fees_pin.stdout }}') WHERE id=1 AND guardian_id=0;"

- name: restart mysql
  service: name=mysql state=restarted
